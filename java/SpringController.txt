mapping 과정은 상속관계가 전혀 없는 상황에서 A에서 B로 바꿔주는 과정.


Strings의 계층구조

Base Stream
	-Stream
	-IntStream
	-LongStream
	-DoubleStream
---------------------------------------------------------------------------

@RequestMapping
	- 최종사용자가 요구한 URL대로, 요청을 처리할 컨트롤러 클래스의 호출메소드를 결정
	- 최종사용자가 요청한 URL과 더불어, 요청방식(Request Method)에 따라,
	컨트롤러 클래스의 호출메소드를 결정


**URL, URI, Query String, Request Method

1) URL:	(Uniform Resource Locator)
https://search.naver.com/search.naver?sm=top_hty&fbm=0&ie=utf8&query=%EA%B2%80%EC%83%89%EC%96%B4

2) URI:	(Uniform Resource Indicator)
/search.naver?sm=top_hty&fbm=0&ie=utf8&query=%EA%B2%80%EC%83%89%EC%96%B4

3) Query String:
?sm=top_hty&fbm=0&ie=utf8&query=%EA%B2%80%EC%83%89%EC%96%B4

4) Request Method:
	Get 	- 주소 표시줄에 보임
	Post	- 주소 표시줄에 안보임
---------------------------------------------------------------------------

@Controller 의 역할 3가지
	1) 요청을 받아서, 비지니스 로직 처리
	2) 처리결과를 Model에 저장
	3) ViewResolver가 찾을, 응답화면을 생성할 뷰의 이름을 반환



---------------------------------------------------------------------------

Database의 트랜잭션 관리

1. 	Connection을 얻고나면, 이 Connection의 commit mode가 정해짐

2. 	Database 마다, 약간의 차이가 있기는 하나, 대부분의 Database는, 
	Connection의 commit mode를 "Auto Commit" mode로 자동설정한다.

3. 	그럼, Auto Commit Mode란?
		-각각의 SQL문장(DML)을 수행시, 그 결과를 영구적으로 DB에 저장하라!!는 의미.

4.	개발자는 Connection객체를 얻고 나면, 이 Commit Mode를 바꿀 수 있다.
	conn.setAutoCommit(true/false); 로 바꿀수 있다.



///////////////////////////////////////////
스프링의 scan tag에 의해서 자동으로 bean container bean 객체로 생성 / 등록해주는 annotation

@Controller
@Service
@Configuration
@Bean
@Component